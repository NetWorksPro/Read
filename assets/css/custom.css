/*  不支持CSS3的浏览器中，可通过设置默认颜色作为备选方案  */
.gradient-text {
  color: #444; /* 备选颜色 */
}
<!-- 线性渐变文字 -->
  .linear-text {
    /* 1. 设置线性渐变背景 */
    background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
    
    /* 2. 将背景裁剪到文字范围（需浏览器前缀） */
    -webkit-background-clip: text;
    background-clip: text;
    
    /* 3. 设置文字颜色透明以显示背景渐变 */
    -webkit-text-fill-color: transparent;
    color: transparent;
    
    /* 注意：Safari 必须使用 -webkit- 前缀 */
    display: inline-block; /* 避免渐变区域截断 */
  }

<!-- 径向渐变文字 -->
  .radial-text {
    /* 1. 创建从中心向外扩散的渐变 */
    background: radial-gradient(circle, #ff9a9e, #fad0c4);
    
    /* 2. 关键属性：将背景限制在文字内 */
    -webkit-background-clip: text;
    background-clip: text;
    
    /* 3. 必须与透明文本配合使用 */
    -webkit-text-fill-color: transparent;
    color: transparent;
    
    /* 注意：Firefox 76+ 已支持无前缀版本 */
    font-weight: bold; /* 推荐加粗字体效果更明显 */
  }

<!-- 锥形渐变文字 -->
  .conic-text {
    /* 1. 创建色轮式环绕渐变 */
    background: conic-gradient(#a8edea, #fed6e3, #a8edea);
    
    /* 2. 背景裁剪至文字形状 */
    -webkit-background-clip: text;
    background-clip: text;
    
    /* 3. 文字颜色透明化 */
    -webkit-text-fill-color: transparent;
    color: transparent;
    
    /* 特别注意：Chrome 69+ / Edge 79+ 支持，Firefox 需启用标志 */
    text-transform: uppercase; /* 大文字更易观察渐变细节 */
  }



/* <p class="blue-gradient-text">这是一段线性渐蓝变紫色渐变色的文本</p> */
.blue-gradient-text {
  background: linear-gradient(45deg, #0000ff, #8a2be2);
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  font-size: 2rem;
  font-weight: bold;
}

/* <p class="linear-gradient-text">这是一段线性渐变色的文本</p> */
 .linear-gradient-text {
    background: linear-gradient(to right, #ff8a00, #e52e71, #1e90ff);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    font-size: 24px;
    font-weight: bold;
  }
/*  <p class="radial-gradient-text">这是一段径向渐变色的文本</p>  */
 .radial-gradient-text {
    background: radial-gradient(circle, #ff8a00, #e52e71, #1e90ff);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    font-size: 24px;
    font-weight: bold;
  }
/*  <p class="rainbow-text">这是一段彩虹渐变色的文本</p>  */
 .rainbow-text {
    background: linear-gradient(to right, 
      red, orange, yellow, 
      green, blue, indigo, violet);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    font-size: 24px;
    font-weight: bold;
  }
/*  <p class="vertical-gradient-text">这是一段垂直渐变色的文本</p>   */
 .vertical-gradient-text {
    background: linear-gradient(to bottom, #1e90ff, #ff1493);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    font-size: 24px;
    font-weight: bold;
  }

/*  <p class="multi-gradient-text">这是一段动画渐变色的文本，多方向渐变文本</p>   */
 .multi-gradient-text {
    background: linear-gradient(45deg, 
      #ff0000, #ff7700, #ffdd00, 
      #00ff00, #0000ff, #9900ff, 
      #ff0099);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    font-size: 24px;
    font-weight: bold;
    background-size: 400% 400%;
    animation: gradient 8s ease infinite;
  }
  
  @keyframes gradient {
    0% {background-position: 0% 50%;}
    50% {background-position: 100% 50%;}
    100% {background-position: 0% 50%;}
  }

/* 方案1: 动态角度线性渐变 */
.gradient-text-1 {
  font-size: 3em;
  font-weight: bold;
  background-image: linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  /* 
  注解：
  1. 使用45度角线性渐变
  2. 三色渐变过渡效果
  3. 需要-webkit-前缀兼容旧版浏览器
  */
}

/* 方案2: 径向渐变文字 */
.gradient-text-2 {
  font-size: 3em;
  background-image: radial-gradient(circle at center, #ff9a9e, #fad0c4);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  text-shadow: 2px 2px 4px rgba(0,0,0,0.2);
  /*
  注解：
  1. 圆形径向渐变
  2. 添加文字阴影增强立体感
  3. 渐变中心点在元素中心
  */
}

/* 方案3: 动画渐变效果 */
.gradient-text-3 {
  font-size: 3em;
  background-image: linear-gradient(90deg, #ff6b6b, #4ecdc4, #ff6b6b);
  background-size: 200% auto;
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  animation: gradientShift 3s linear infinite;
}

@keyframes gradientShift {
  0% { background-position: 0% center; }
  100% { background-position: -200% center; }
}
/*
注解：
1. 创建背景尺寸扩展（200%）
2. 使用动画改变背景位置
3. 无限循环动画效果
*/

/* 方案4: 多色角度渐变 */
.gradient-text-4 {
  font-size: 3em;
  background-image: conic-gradient(
    #ff6b6b 0deg, 
    #4ecdc4 90deg, 
    #45b7d1 180deg, 
    #ff6b6b 360deg
  );
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  /*
  注解：
  1. 使用圆锥渐变(conic-gradient)
  2. 按角度设置颜色断点
  3. 创建色轮渐变效果
  */
}


/* 方案1: 文字边缘渐变 */
.edge-gradient {
  font-size: 4em;
  font-weight: 900;
  color: transparent;
  position: relative;
  -webkit-text-stroke: 2px #000;
}

.edge-gradient::after {
  content: attr(data-text);
  position: absolute;
  left: 0;
  top: 0;
  background: linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1);
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-stroke: 2px transparent;
  z-index: -1;
  /*
  注解：
  1. 使用伪元素叠加技术
  2. 原文字设置透明+黑色描边
  3. 伪元素实现渐变填充
  4. 通过z-index控制层级关系
  */
}

/* 方案2: 3D立体渐变 */
.three-d-gradient {
  font-size: 4em;
  font-weight: 900;
  color: transparent;
  background: linear-gradient(145deg, #ff6b6b 30%, #4ecdc4 70%);
  -webkit-background-clip: text;
  background-clip: text;
  text-shadow: 
    2px 2px 0 #45b7d1,
    4px 4px 0 #4ecdc4,
    6px 6px 0 #ff6b6b;
  /*
  注解：
  1. 多层text-shadow创建立体感
  2. 渐变角度145度增强空间感
  3. 每层阴影颜色对应渐变颜色
  4. 阴影偏移量递增实现3D效果
  */
}


<script>
// 方案3: Canvas动态渐变
const canvas = document.getElementById('canvasGradient');
const ctx = canvas.getContext('2d');
let gradientPos = 0;

function drawAnimatedText() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  
  // 创建动态渐变
  const gradient = ctx.createLinearGradient(gradientPos, 0, 200 + gradientPos, 0);
  gradient.addColorStop(0, '#ff6b6b');
  gradient.addColorStop(0.5, '#4ecdc4');
  gradient.addColorStop(1, '#45b7d1');
  
  // 绘制文本
  ctx.font = 'bold 4em Arial';
  ctx.fillStyle = gradient;
  ctx.fillText('Canvas Gradient', 50, 80);
  
  // 更新渐变位置
  gradientPos = (gradientPos + 1) % canvas.width;
  requestAnimationFrame(drawAnimatedText);
}

drawAnimatedText();
/*
注解：
1. 使用Canvas绘图API实现
2. 动态更新渐变起始位置
3. requestAnimationFrame实现流畅动画
4. 渐变颜色可自定义修改
5. 支持复杂的动态效果
*/
</script>

    /* 方案4: CSS掩遮渐变 */
    .mask-gradient {
      font-size: 3rem;
      font-weight: bold;
      /* 创建渐变色背景 */
      background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
      /* 关键属性：将背景裁剪到文本区域 */
      -webkit-background-clip: text; /* 兼容Webkit内核浏览器 */
      background-clip: text;
      /* 关键属性：将文本颜色设置为透明以显示背景 */
      color: transparent;
      /* 备用颜色（当渐变不生效时显示） */
      -webkit-text-fill-color: transparent; /* 兼容旧版Safari */
      margin: 20px 0;
    }

    /* 方案5: 混合滤镜渐变 */
    .blend-container {
      position: relative;
      display: inline-block;
      font-size: 3rem;
      font-weight: bold;
      margin: 20px 0;
    }

    .blend-text {
      position: relative;
      color: #fff; /* 基础文本颜色 */
    }

    /* 渐变覆盖层 */
    .blend-text::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      /* 创建渐变背景 */
      background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
      /* 关键属性：使用混合模式叠加颜色 */
      mix-blend-mode: multiply;
      /* 调整不透明度控制渐变强度 */
      opacity: 0.8;
    }

    /* 添加滤镜增强效果 */
    .blend-container {
      filter: contrast(1.2) saturate(1.5);
    }
/*  CSS掩遮渐变方案  */
.mask-gradient {
  background: linear-gradient(...);  /* 创建渐变色带 */
  background-clip: text;            /* 将背景限制在文本形状内 */
  color: transparent;               /* 隐藏原始文本颜色 */
}
/*  混合滤镜渐变方案  */
.blend-text::after {
  background: linear-gradient(...); /* 创建渐变层 */
  mix-blend-mode: multiply;         /* 颜色混合模式 */
  opacity: 0.8;                     /* 调整混合强度 */
}
.blend-container {
  filter: contrast(...);            /* 增强视觉效果 */
}

